server:
  port: 80
  undertow:
    # undertow 日志
    accesslog:
      enabled: false
      dir:
    threads:
      # 指定工作者线程的 I/0 线程数，默认为 2 或者 CPU 的个数
      io: 6
      # 指定工作者线程个数，默认为 I/O 线程个数的 8 倍
      worker:
    # 设置 HTTP POST 内容的最大长度，默认不做限制
    max-http-post-size:
    # 每块buffer的空间大小,越小的空间被利用越充分，不要设置太大，以免影响其他应用，合适即可
    buffer-size: 1024
    # 是否分配的直接内存(NIO直接分配的堆外内存)
    direct-buffers: true
spring:
  application:
    name: spring-boot-demo
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  datasource:
    username: root
    password: nefunsi
    url: jdbc:mysql://10.10.11.141:3306/contract_management?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 驱动（根据url自动识别）这一项可配可不配，如果不配置druid会根据url自动识别dbType
      driver-class-name: com.mysql.cj.jdbc.Driver
      # 初始大小
      initial-size: 10
      # 连接池最大大小
      max-active: 20
      # 连接池最小大小
      min-idle: 5
      # 获取链接等待时间,单位毫秒
      max-wait: 10000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 300000
      # 连接保持空闲而不被驱逐的最小时间
      min-evictable-idle-time-millis: 300000
      # 设置druid 强制回收连接的时限，当程序从池中get到连接开始算起，超过此值后，druid将强制回收该连接，单位秒。应大于业务运行最长时间
      remove-abandoned-timeout: 6000
      # 用来检测连接是否有效的sql，要求是一个查询语句
      validation-query: SELECT now()
      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-borrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false
      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      pool-prepared-statements: false
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
      max-pool-prepared-statement-per-connection-size: 0
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计,stat性能监控 wall 防火墙控制
      filters: stat,wall,log4j2
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # 连接属性。比如设置一些连接池统计方面的配置。
      connection-properties: druid.stat.mergeSql=true; druid.stat.slowSqlMillis=5000
      filter:
        stat: # 监控统计
          enabled: true
          log-slow-sql: true # 慢SQL记录
          slow-sql-millis: 1000 # 慢SQL执行时间
          merge-sql: true # 是否合并sql
          db-type: mysql # 数据库类型
        wall: # 防御SQL注入
          enabled: true
          db-type: mysql
          config:
            delete-allow: false
            drop-table-allow: false
            multi-statement-allow: true
      stat-view-servlet:
        enabled: true # 是否启用
        allow: 127.0.0.1 # 设置白名单，不填则允许所有访问
        deny: 192.168.0.1 # 设置黑名单, 如果allow与deny同时存在，deny优先于allow
        reset-enable: false # 禁止手动重置监控数据
        url-pattern: /druid/*
        login-username: admin  # 设置监控页面的登陆密码
        login-password: admin  # 设置监控页面的登陆名

      # WebStatFilter配置
      web-stat-filter:
        enabled: true # 是否启用
        url-pattern: "/*"  # 访问路径
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*" # 排除不必要的url
        session-stat-max-count: 1000 # 监控最大session数，默认是1000
        session-stat-enable: true # 是否启用session的统计功能
        profile-enable: true # 是否启用监控单个Url调用的sql列表
        principalSessionName: session_user_key # 使druid当前session的用户是谁，session_user_key是你保存到session中的sessionName
        principalCookieName: cookie_user_key # 使druid只当当前的user是谁,cookie_user_key是你保存在cookie中的cookieName